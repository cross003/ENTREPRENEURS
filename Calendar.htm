<!doctype html>
<html>
    <head>
	<style>
	body {
  font-family: Arial;
  padding: 30px;
  background-image: url("eun.jpg");
  background-repeat: no-repeat, repeat;
  background-size: cover;
}
	
	/* Style the top navigation bar */
.topnav {
  top: 0px;
  left: 0px;
  padding: 20px 20px; 
  position: absolute; 
  overflow: hidden;
  background-color: white;
  width:100%;
  height: 30px;
  opacity: 0.75;
  margin-bottom: 300px;
}
.sticky
{
	padding: 10px 20px;
	position: fixed;
	top : 0;
	height : 200px;
	width: 100%;
}
/* Style the topnav links */
.topnav a {
  float: left;
  margin: 0px auto;
  display: inline;
  color: black;
  text-align: center;
  padding: 14px 16px 0px ;
  text-decoration: none; 
  outline-color: #f2f2f2;
}
/* Change color on hover */
.topnav a:hover {
  color: gold;
}
/* Footer */
.footer {
  position:absolute; 
  width:100%;  
  left: 0px;
  bottom: 0px;
  text-align: center;
  background: #ddd;
  margin: 0;
}
	</style>
        <meta charset="utf-8">
        <title> Calendar</title>
        <meta name="description" content="A simple Calendar in JS Vanilla">
        <meta name="author" content="https://github.com/marssola/vanilla-calendar">

        <link rel="stylesheet" href="style.css">
        <link rel="stylesheet" href="src/css/vanilla-calendar-min.css">
        <script src="src/js/vanilla-calendar-min.js"></script>
    </head>
    <body> 
<div class="topnav">
  <div class ="sticky">
	<a href="https://cross003.github.io/Entrepreneurs/">Home</a>
	<a href="https://cross003.github.io/Entrepreneurs/Board.htm">Board</a>
	<a href="https://cross003.github.io/Entrepreneurs/Resources.htm">Resources</a>
	<a href="https://cross003.github.io/Entrepreneurs/Calender.htm">Calendar</a>
	<a href="https://cross003.github.io/Entrepreneurs/Contact.htm" style="float:right">Contact Us</a>
  </div>
</div>
        <div class="content">
         

            <div class="area-buttons" style="margin-top: 50px">
                <button class="info" name="pastDates">Disable past dates</button>
                <button class="info" name="availableDates">Set available dates</button>
                <button class="info" name="availableWeekDays">Set available weekdays</button>
            </div>
            <div id="myCalendar" class="vanilla-calendar" style="margin-bottom: 20px"></div>

        <script>
            let pastDates = true, availableDates = false, availableWeekDays = false
            
            let calendar = new VanillaCalendar({
                selector: "#myCalendar",
                months: ["January", "Fevereiro", "Marçh", "April", "May", "June", "July", "Agosto", "September", "October", "November", "December"],
                shortWeekday: ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat'],
                onSelect: (data, elem) => {
                    console.log(data, elem)
                }
            })
            
            let btnPastDates = document.querySelector('[name=pastDates]')
            btnPastDates.addEventListener('click', () => {
                pastDates = !pastDates
                calendar.set({pastDates: pastDates})
                btnPastDates.innerText = `${(pastDates ? 'Disable' : 'Enable')} past dates`
            })
            
            let btnAvailableDates = document.querySelector('[name=availableDates]')
            btnAvailableDates.addEventListener('click', () => {
                availableDates = !availableDates
                btnAvailableDates.innerText = `${(availableDates ? 'Clear available dates' : 'Set available dates')}`
                if (!availableDates) {
                    calendar.set({availableDates: [], datesFilter: false})
                    return
                }
                let dates = () => {
                    let result = []
                    for (let i = 1; i < 15; ++i) {
                        if (i % 2) continue
                        let date = new Date(new Date().getTime() + (60 * 60 * 24 * 1000) * i)
                        result.push({date: `${String(date.getFullYear())}-${String(date.getMonth() + 1).padStart(2, 0)}-${String(date.getDate()).padStart(2, 0)}`})
                    }
                    return result
                }
                calendar.set({availableDates: dates(), availableWeekDays: [], datesFilter: true})
            })
            
            let btnAvailableWeekDays = document.querySelector('[name=availableWeekDays]')
            btnAvailableWeekDays.addEventListener('click', () => {
                availableWeekDays = !availableWeekDays
                btnAvailableWeekDays.innerText = `${(availableWeekDays ? 'Clear available weekdays' : 'Set available weekdays')}`
                if (!availableWeekDays) {
                    calendar.set({availableWeekDays: [], datesFilter: false})
                    return
                }
                let days = [{
                    day: 'monday'
                }, {
                    day: 'tuesday'
                }, {
                    day: 'wednesday'
                }, {
                    day: 'friday'
                }]
                calendar.set({availableWeekDays: days, availableDates: [], datesFilter: true})
            })
        </script>
		
	<div class="footer">	
		<h5>© 2019 by UMBC Entrepreneurs. Proudly created by UMBC eShip. For Questions /  Contact us at entrepreneurs@umbc.edu.</h5>
</div>
    </body>
</html>